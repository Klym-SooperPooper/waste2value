{"remainingRequest":"C:\\apps\\beeko2\\node_modules\\thread-loader\\dist\\cjs.js!C:\\apps\\beeko2\\node_modules\\babel-loader\\lib\\index.js!C:\\apps\\beeko2\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\apps\\beeko2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\apps\\beeko2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\apps\\beeko2\\src\\components\\qr.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\apps\\beeko2\\src\\components\\qr.vue","mtime":1609845920077},{"path":"C:\\apps\\beeko2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1567240334000},{"path":"C:\\apps\\beeko2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["qr.vue"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\n<template>\n\t<v-container>\n\t\t<v-layout text-center wrap>\n\t\t\t<v-flex xs12>\n\t\t\t\t<v-img\n\t\t\t\t\t:src=\"require('../assets/logo2.png')\"\n\t\t\t\t\tclass=\"my-3\"\n\t\t\t\t\tcontain\n\t\t\t\t\theight=\"180\"\n\t\t\t\t></v-img>\n\t\t\t</v-flex>\n\n\t\t\t<v-flex mb-4>\n\t\t\t\t<div v-if=\"mountQRReader\">\n\t\t\t\t\t<v-alert\n\t\t\t\t\t\tv-if=\"errorStatus\"\n\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\tcolor=\"red lighten-2\"\n\t\t\t\t\t\ticon=\"mdi-alert\"\n\t\t\t\t\t\t>{{ errorStatus }}</v-alert\n\t\t\t\t\t>\n\t\t\t\t\t<v-alert\n\t\t\t\t\t\tv-else\n\t\t\t\t\t\ttype=\"info\"\n\t\t\t\t\t\tcolor=\"orange lighten-2\"\n\t\t\t\t\t\ticon=\"mdi-qrcode-scan\"\n\t\t\t\t\t>\n\t\t\t\t\t\tНаведіть на екран на контейнері для автоматичного сканування\n\t\t\t\t\t</v-alert>\n\t\t\t\t\t<v-alert\n\t\t\t\t\t\tv-if=\"location\"\n\t\t\t\t\t\ttype=\"info\"\n\t\t\t\t\t\ticon=\"mdi-information-outline\"\n\t\t\t\t\t\t>Lat: {{ location.latitude }}, long: {{ location.longitude }}</v-alert\n\t\t\t\t\t>\n\n\t\t\t\t\t<qrcode-stream\n\t\t\t\t\t\t@decode=\"onDecode\"\n\t\t\t\t\t\t@init=\"onInit\"\n\t\t\t\t\t\theight=\"100\"\n\t\t\t\t\t></qrcode-stream>\n\t\t\t\t</div>\n\t\t\t\t<v-btn\n\t\t\t\t\tv-if=\"!mountQRReader\"\n\t\t\t\t\t@click=\"startReading\"\n\t\t\t\t\tx-large\n\t\t\t\t\tcolor=\"success\"\n\t\t\t\t\tdark\n\t\t\t\t\t>Сканувати QR-код</v-btn\n\t\t\t\t>\n\t\t\t</v-flex>\n\t\t</v-layout>\n\t</v-container>\n</template>\n\n<script>\nimport { getPermission, Permissions } from '@/util/permissions'\n\nexport default {\n\tdata: () => ({\n\t\terrorStatus: \"\", // Error\\loading message\n\t\tmountQRReader: false,\n\t\tlocation: null,\n\t}),\n\tmounted() {\n\t\tdocument.addEventListener(\"backbutton\", this.backButton, false);\n\t\t/*var qr = this.$qrcode(0, 'H');\n    var transaction = {binid:1, count:1,  time:Date. now()};\n    //var transfer = {fromid:1, tokens:1,  time:Date. now()};\n    transaction = JSON.stringify(transaction);\n    //eslint-disable-next-line no-console\n    console.log(transaction);\n    qr.addData(this.$encryptor.encrypt(JSON.stringify(transaction)));\n    qr.make();\n    document.getElementById('placeHolder').innerHTML = qr.createImgTag();*/\n\n\t\t// mounted addEventListener могут вызвать утечку, так как надо отвязывать каждый вручную в destroyed\n\t\t// возможно повесить его в main.js/App.vue и через Vuex/Vue.prototype показывать\n\t\t// document.addEventListener(\"deviceready\", () => {\n\t\t// \tthis.deviceReady = true;\n\t\t// \tconsole.log(\"Cordova : device is ready !\");\n\t\t// });\n\t},\n\tmethods: {\n\t\tbackButton(){\n\t\t\talert(1);\n\t\t\tthis.$router.go(-1);\n\t\t},\n\t\tasync startReading() {\n\t\t\tconsole.log(Permissions)\n\t\t\tconst cameraPerm = await getPermission(Permissions.camera)\n\t\t\t// const locationPerm = await getPermission(Permissions.location)\n\n\t\t\tif (cameraPerm) {\n\t\t\t\tthis.mountQRReader = !this.mountQRReader\n\t\t\t} else {\n\t\t\t\t// Show user that they can't scan QR code without camera or provide alternate way (load file, etc)\n\t\t\t\tthis.errorStatus = `We couldn't aquire permission to use camera`;\n\t\t\t}\n\n\t\t\t// if (locationPerm) {\n\t\t\t\tconst loc = await new Promise((resolve, reject) => {\n\t\t\t\t\tnavigator.geolocation.getCurrentPosition(resolve, reject)\n\t\t\t\t})\n\t\t\t\tconst { latitude, longitude } = loc.coords;\n\t\t\t\tthis.location = { latitude, longitude }\n\t\t\t// }\n\t\t},\n\t\t//camera QR init\n\t\tasync onInit(promise) {\n\t\t\t// show loading indicator\n\n\t\t\ttry {\n\t\t\t\tconst { capabilities } = await promise;\n\t\t\t\tconsole.log(capabilities);\n\t\t\t\t// successfully initialized\n\t\t\t} catch (error) {\n\t\t\t\t// alert(error.name);\n\t\t\t\tif (error.name !== 'TypeError') {\n\t\t\t\t\tthis.errorStatus = `We couldn't aquire permission to use camera`;\n\t\t\t\t}\n\t\t\t\tif (error.name === \"NotAllowedError\") {\n\t\t\t\t\t// user denied camera access permisson\n\t\t\t\t} else if (error.name === \"NotFoundError\") {\n\t\t\t\t\t// no suitable camera device installed\n\t\t\t\t} else if (error.name === \"NotSupportedError\") {\n\t\t\t\t\t// page is not served over HTTPS (or localhost)\n\t\t\t\t} else if (error.name === \"NotReadableError\") {\n\t\t\t\t\t// maybe camera is already in use\n\t\t\t\t} else if (error.name === \"OverconstrainedError\") {\n\t\t\t\t\t// did you requested the front camera although there is none?\n\t\t\t\t} else if (error.name === \"StreamApiNotSupportedError\") {\n\t\t\t\t\t// browser seems to be lacking features\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\t// hide loading indicator\n\t\t\t}\n\t\t},\n\t\tIsJsonString(str) {\n\t\t\ttry {\n\t\t\t\t//eslint-disable-next-line\n\t\t\t\tconsole.log(\"try str => \" + str);\n\t\t\t\treturn JSON.parse(str);\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tonDecode(decodedString) {\n\t\t\tconsole.log(decodedString);\n\t\t\tif (decodedString) {\n\t\t\t\t//this.$router.push('Wallet')\n\t\t\t\t//var decrypted = this.$encryptor.decrypt(decodedString);\n\t\t\t\t//eslint-disable-next-line\n\t\t\t\tdecodedString = this.IsJsonString(decodedString);\n\t\t\t\tlet router = this.$router;\n\t\t\t\tlet db = this.$store.state.db;\n\t\t\t\tlet ref = this;\n\t\t\t\t//eslint-disable-next-line\n\t\t\t\tlet getUserDocRef = db\n\t\t\t\t\t.collection(\"users\")\n\t\t\t\t\t.doc(this.$firebase.auth().currentUser.uid);\n\n\t\t\t\tif (typeof decodedString === \"object\") {\n\t\t\t\t\t//lottery\n\t\t\t\t\tif (typeof decodedString.t !== \"undefined\") {\n\t\t\t\t\t\tdb.collection(\"qr\")\n\t\t\t\t\t\t\t.where(\"t\", \"==\", decodedString.t)\n\t\t\t\t\t\t\t.where(\"activated\", \"==\", false)\n\t\t\t\t\t\t\t.get()\n\t\t\t\t\t\t\t.then(function (querySnapshot) {\n\t\t\t\t\t\t\t\tquerySnapshot.forEach(function (doc) {\n\t\t\t\t\t\t\t\t\tdb.collection(\"qr\")\n\t\t\t\t\t\t\t\t\t\t.doc(doc.id)\n\t\t\t\t\t\t\t\t\t\t.update({\n\t\t\t\t\t\t\t\t\t\t\tuid: ref.$firebase.auth().currentUser.uid,\n\t\t\t\t\t\t\t\t\t\t\tactivated: true,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\t\talert(\"QR active user is updated!\");\n\t\t\t\t\t\t\t\t\t\t\tdecodedString = {\n\t\t\t\t\t\t\t\t\t\t\t\tbinid: 1,\n\t\t\t\t\t\t\t\t\t\t\t\tbonus: ref.$bonusRate,\n\t\t\t\t\t\t\t\t\t\t\t\tbonusRate: ref.$bonusRate,\n\t\t\t\t\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t\t\t\t\t\trate: ref.$rate,\n\t\t\t\t\t\t\t\t\t\t\t\ttokens: ref.$rate,\n\t\t\t\t\t\t\t\t\t\t\t\tuid: ref.$firebase.auth().currentUser.uid,\n\t\t\t\t\t\t\t\t\t\t\t\ttime: Date.now().toString(),\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\tdb.collection(\"transactions\")\n\t\t\t\t\t\t\t\t\t\t\t\t.add(decodedString)\n\t\t\t\t\t\t\t\t\t\t\t\t.then(function (docRef) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Transaction written with ID: \",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdocRef.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t//run TRANSFER USER transaction\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn db\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.runTransaction(function (transaction) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// This code may get re-run multiple times if there are conflicts.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn transaction\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.get(getUserDocRef)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.then(function (getUserDoc) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!getUserDoc.exists) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow \"Document does not exist!\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar newTokens =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.data().tokens +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecodedString.tokens;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar newBonus =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.data().bonus +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecodedString.bonus;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransaction.update(getUserDocRef, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttokens: newTokens,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbonus: newBonus,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"user \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.id +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" played lottery for the amount of \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTokens +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" tokens\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.then(function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Lottery user transaction successfully committed!\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//run transaction for transfer user\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trouter.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath: \"wallet\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Wallet\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparams: { transferred: decodedString.tokens },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Transaction failed: \", error);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.error(\"Error adding document: \", error);\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t//transfer or vending machine generation\n\t\t\t\t\t//TRANSFER\n\t\t\t\t\telse if (typeof decodedString.tokens !== \"undefined\") {\n\t\t\t\t\t\t//alert('Get your '+decodedString.tokens+' tokens from '+decodedString.fromid+' !');\n\t\t\t\t\t\t//add owner of transaction\n\t\t\t\t\t\tdecodedString.uid = this.$firebase.auth().currentUser.uid;\n\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\tlet getTransferUserDocRef = db\n\t\t\t\t\t\t\t.collection(\"users\")\n\t\t\t\t\t\t\t.doc(decodedString.fromid.toString());\n\t\t\t\t\t\t//make sure we get a number of tokens\n\t\t\t\t\t\tdecodedString.tokens = parseInt(decodedString.tokens);\n\t\t\t\t\t\tdb.collection(\"transactions\")\n\t\t\t\t\t\t\t.add(decodedString)\n\t\t\t\t\t\t\t.then(function (docRef) {\n\t\t\t\t\t\t\t\t//eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\tconsole.log(\"Transaction written with ID: \", docRef.id);\n\n\t\t\t\t\t\t\t\t//run OWNER USER transaction\n\t\t\t\t\t\t\t\treturn db\n\t\t\t\t\t\t\t\t\t.runTransaction(function (transaction) {\n\t\t\t\t\t\t\t\t\t\t// This code may get re-run multiple times if there are conflicts.\n\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\treturn transaction\n\t\t\t\t\t\t\t\t\t\t\t.get(getUserDocRef)\n\t\t\t\t\t\t\t\t\t\t\t.then(function (getUserDoc) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!getUserDoc.exists) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthrow \"Document does not exist!\";\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tvar newTokens =\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.data().tokens + decodedString.tokens;\n\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\ttransaction.update(getUserDocRef, {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttokens: newTokens,\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"user \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.id +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" got \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTokens +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" tokens\"\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.then(function () {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Get user transaction successfully committed!\");\n\t\t\t\t\t\t\t\t\t\t//run TRANSFER USER transaction\n\t\t\t\t\t\t\t\t\t\treturn db\n\t\t\t\t\t\t\t\t\t\t\t.runTransaction(function (transaction) {\n\t\t\t\t\t\t\t\t\t\t\t\t// This code may get re-run multiple times if there are conflicts.\n\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\treturn transaction\n\t\t\t\t\t\t\t\t\t\t\t\t\t.get(getTransferUserDocRef)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.then(function (getTransferUserDoc) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!getTransferUserDoc.exists) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow \"Document does not exist!\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar newTokens =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetTransferUserDoc.data().tokens -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecodedString.tokens;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransaction.update(getTransferUserDocRef, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttokens: newTokens,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"user \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetTransferUserDoc.id +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" transferred \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTokens +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" tokens\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t.then(function () {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Transfer user transaction successfully committed!\"\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t//run transaction for transfer user\n\t\t\t\t\t\t\t\t\t\t\t\trouter.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\tpath: \"wallet\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Wallet\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tparams: { transferred: decodedString.tokens },\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Transaction failed: \", error);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Transaction failed: \", error);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t//eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\tconsole.error(\"Error adding document: \", error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t//RECYCLE transaction\n\t\t\t\t\t} else if (typeof decodedString.count !== \"undefined\") {\n\t\t\t\t\t\t//let recycleTime = new Date(decodedString.time);\n\t\t\t\t\t\t// alert('Thanks for '+decodedString.count+' '+recycleTime.getDate()+' '+(recycleTime.getMonth()+1)+' '+recycleTime.getFullYear());\n\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\tlet getUserDocRef = db\n\t\t\t\t\t\t\t.collection(\"users\")\n\t\t\t\t\t\t\t.doc(this.$firebase.auth().currentUser.uid);\n\t\t\t\t\t\t//add owner of transaction\n\t\t\t\t\t\tdecodedString.uid = this.$firebase.auth().currentUser.uid;\n\t\t\t\t\t\t//calc rates\n\t\t\t\t\t\tdecodedString.tokens = this.$rate * decodedString.count;\n\t\t\t\t\t\tdecodedString.rate = this.$rate;\n\t\t\t\t\t\t//calc bonuses\n\t\t\t\t\t\tdecodedString.bonus = this.$bonusRate * decodedString.count;\n\t\t\t\t\t\tdecodedString.bonusRate = this.$bonusRate;\n\t\t\t\t\t\tdb.collection(\"transactions\")\n\t\t\t\t\t\t\t.add(decodedString)\n\t\t\t\t\t\t\t.then(function (docRef) {\n\t\t\t\t\t\t\t\t//eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\tconsole.log(\"Transaction written with ID: \", docRef.id);\n\t\t\t\t\t\t\t\t//run TRANSFER USER transaction\n\t\t\t\t\t\t\t\treturn db\n\t\t\t\t\t\t\t\t\t.runTransaction(function (transaction) {\n\t\t\t\t\t\t\t\t\t\t// This code may get re-run multiple times if there are conflicts.\n\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\treturn transaction\n\t\t\t\t\t\t\t\t\t\t\t.get(getUserDocRef)\n\t\t\t\t\t\t\t\t\t\t\t.then(function (getUserDoc) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!getUserDoc.exists) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthrow \"Document does not exist!\";\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tvar newTokens =\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.data().tokens + decodedString.tokens;\n\t\t\t\t\t\t\t\t\t\t\t\tvar newBonus =\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.data().bonus + decodedString.bonus;\n\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\ttransaction.update(getUserDocRef, {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttokens: newTokens,\n\t\t\t\t\t\t\t\t\t\t\t\t\tbonus: newBonus,\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"user \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.id +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" recycled for the amount of \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTokens +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" tokens\"\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.then(function () {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\"Recycling user transaction successfully committed!\"\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t//run transaction for transfer user\n\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\trouter.push({\n\t\t\t\t\t\t\t\t\t\t\tpath: \"wallet\",\n\t\t\t\t\t\t\t\t\t\t\tname: \"Wallet\",\n\t\t\t\t\t\t\t\t\t\t\tparams: { transferred: decodedString.tokens },\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Transaction failed: \", error);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t//eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\tconsole.error(\"Error adding document: \", error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else if (typeof decodedString.active !== \"undefined\") {\n\t\t\t\t\t\talert(decodedString);\n\t\t\t\t\t\tdb.collection(\"bin_users\")\n\t\t\t\t\t\t\t.where(\"datetime\", \"==\", decodedString.datetime)\n\t\t\t\t\t\t\t.where(\"pending\", \"==\", true)\n\t\t\t\t\t\t\t.where(\"binid\", \"==\", decodedString.binid)\n\t\t\t\t\t\t\t.get()\n\t\t\t\t\t\t\t.then(function (querySnapshot) {\n\t\t\t\t\t\t\t\tif (querySnapshot.exists) {\n\t\t\t\t\t\t\t\t\tquerySnapshot.forEach(function (doc) {\n\t\t\t\t\t\t\t\t\t\tdb.collection(\"bin_users\").doc(doc.id).update({\n\t\t\t\t\t\t\t\t\t\t\tpending: false,\n\t\t\t\t\t\t\t\t\t\t\tactive: true,\n\t\t\t\t\t\t\t\t\t\t\tuid: ref.$firebase.auth().currentUser.uid,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\talert(\"active user is updated!\");\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\talert(\"Error getting active doc\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\talert(error);\n\t\t\t\t\t\t\t\tconsole.log(\"Error getting active => \", error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"QR error\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\talert(\"QR error\");\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n};\n</script>\n"],"sourceRoot":"src/components"}]}