{"remainingRequest":"C:\\apps\\beeko2\\node_modules\\thread-loader\\dist\\cjs.js!C:\\apps\\beeko2\\node_modules\\babel-loader\\lib\\index.js!C:\\apps\\beeko2\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\apps\\beeko2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\apps\\beeko2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\apps\\beeko2\\src\\components\\api.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\apps\\beeko2\\src\\components\\api.vue","mtime":1606854338147},{"path":"C:\\apps\\beeko2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1567240334000},{"path":"C:\\apps\\beeko2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWludCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwaScsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7fTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgZGIgPSB0aGlzLiRzdG9yZS5zdGF0ZS5kYjsKICAgIHZhciBzYXZlV2FsbGV0ID0ge307CiAgICBzYXZlV2FsbGV0LmJpbmlkID0gdGhpcy4kcm91dGUucXVlcnkuYmluaWQ7CiAgICBzYXZlV2FsbGV0LmNvdW50ID0gdGhpcy4kcm91dGUucXVlcnkuY291bnQ7CgogICAgaWYgKHRoaXMuJHRyYW5zYWN0aW9uS2V5ID09IHRoaXMuJHJvdXRlLnF1ZXJ5LmtleSkgewogICAgICB2YXIgcmVmID0gdGhpczsKCiAgICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS5jb3VudCkgewogICAgICAgIHZhciBnZXRVc2VyRG9jUmVmID0gZGIuY29sbGVjdGlvbigndXNlcnMnKS5kb2ModGhpcy4kZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyLnVpZCk7CiAgICAgICAgZGIuY29sbGVjdGlvbignYmluX3VzZXJzJykud2hlcmUoJ2JpbmlkJywgJz09JywgcGFyc2VJbnQodGhpcy4kcm91dGUucXVlcnkuYmluaWQpKS53aGVyZSgnYWN0aXZlJywgJz09JywgdHJ1ZSkuZ2V0KCkudGhlbihmdW5jdGlvbiAocXVlcnlTbmFwc2hvdCkgewogICAgICAgICAgcXVlcnlTbmFwc2hvdC5mb3JFYWNoKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgc2F2ZVdhbGxldC51aWQgPSBkb2MuZGF0YSgpLnVpZDsKICAgICAgICAgICAgc2F2ZVdhbGxldC5yYXRlID0gcmVmLiRyYXRlOwogICAgICAgICAgICBzYXZlV2FsbGV0LnRva2VucyA9IHJlZi4kcmF0ZTsKICAgICAgICAgICAgc2F2ZVdhbGxldC50aW1lID0gRGF0ZS5ub3coKTsKICAgICAgICAgICAgZGIuY29sbGVjdGlvbigidHJhbnNhY3Rpb25zIikuYWRkKHNhdmVXYWxsZXQpLnRoZW4oZnVuY3Rpb24gKHNhdmVkVHJhbnNhY3Rpb25JRCkgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzYXZlZFRyYW5zYWN0aW9uSUQgPT4gJyArIHNhdmVkVHJhbnNhY3Rpb25JRC5pZCk7CiAgICAgICAgICAgICAgcmV0dXJuIGRiLnJ1blRyYW5zYWN0aW9uKGZ1bmN0aW9uICh0cmFuc2FjdGlvbikgewogICAgICAgICAgICAgICAgLy8gVGhpcyBjb2RlIG1heSBnZXQgcmUtcnVuIG11bHRpcGxlIHRpbWVzIGlmIHRoZXJlIGFyZSBjb25mbGljdHMuCiAgICAgICAgICAgICAgICAvL2VzbGludC1kaXNhYmxlLW5leHQtbGluZQogICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zYWN0aW9uLmdldChnZXRVc2VyRG9jUmVmKS50aGVuKGZ1bmN0aW9uIChnZXRVc2VyRG9jKSB7CiAgICAgICAgICAgICAgICAgIGlmICghZ2V0VXNlckRvYy5leGlzdHMpIHsKICAgICAgICAgICAgICAgICAgICB0aHJvdyAiRG9jdW1lbnQgZG9lcyBub3QgZXhpc3QhIjsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgdmFyIG5ld1Rva2VucyA9IGdldFVzZXJEb2MuZGF0YSgpLnRva2VucyArIHNhdmVXYWxsZXQudG9rZW5zOyAvL3ZhciBuZXdCb251cyA9IGdldFVzZXJEb2MuZGF0YSgpLmJvbnVzICsgZGVjb2RlZFN0cmluZy5ib251czsKICAgICAgICAgICAgICAgICAgLy9lc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKCiAgICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uLnVwZGF0ZShnZXRVc2VyRG9jUmVmLCB7CiAgICAgICAgICAgICAgICAgICAgdG9rZW5zOiBuZXdUb2tlbnMKICAgICAgICAgICAgICAgICAgICAvKiwgYm9udXM6IG5ld0JvbnVzKi8KCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICByZWYuJHN0b3JlLnN0YXRlLnVzZXIudG9rZW5zID0gbmV3VG9rZW5zOwogICAgICAgICAgICAgICAgICBhbGVydCgidXNlciAiICsgZ2V0VXNlckRvYy5pZCArICIgcmVjeWNsZWQgZm9yIHRoZSBhbW91bnQgb2YgIiArIG5ld1Rva2VucyArICIgdG9rZW5zIik7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHt9KTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJFcnJvciBnZXR0aW5nIGRvY3VtZW50czogIiwgZXJyb3IpOwogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAodGhpcy4kcm91dGUucXVlcnkuYWN0aXZlKSB7CiAgICAgICAgdmFyIGFjdGl2ZVVzZXIgPSB7fTsgLy8gYWN0aXZlVXNlci51aWQgPSB0aGlzLiRmaXJlYmFzZS5hdXRoKCkuY3VycmVudFVzZXIudWlkOwoKICAgICAgICBhY3RpdmVVc2VyLmJpbmlkID0gdGhpcy4kcm91dGUucXVlcnkuYmluaWQ7CiAgICAgICAgYWN0aXZlVXNlci5hY3RpdmUgPSB0cnVlOwogICAgICAgIGFjdGl2ZVVzZXIucGVuZGluZyA9IHRydWU7CiAgICAgICAgYWN0aXZlVXNlci5kYXRldGltZSA9IERhdGUubm93KCk7IC8vZGVsZXRlIGFjdGl2ZSAKCiAgICAgICAgdmFyIGFjdGl2ZWtpbGxfcXVlcnkgPSBkYi5jb2xsZWN0aW9uKCdiaW5fdXNlcnMnKS53aGVyZSgnYWN0aXZlJywgJz09JywgdHJ1ZSk7CiAgICAgICAgYWN0aXZla2lsbF9xdWVyeS5nZXQoKS50aGVuKGZ1bmN0aW9uIChxdWVyeVNuYXBzaG90KSB7CiAgICAgICAgICBxdWVyeVNuYXBzaG90LmZvckVhY2goZnVuY3Rpb24gKGRvYykgewogICAgICAgICAgICBkb2MucmVmLmRlbGV0ZSgpOwogICAgICAgICAgICBhbGVydChkb2MuaWQpOwogICAgICAgICAgfSk7CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICBkYi5jb2xsZWN0aW9uKCdiaW5fdXNlcnMnKS5hZGQoYWN0aXZlVXNlcik7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIGNvbnNvbGUubG9nKCdpbnZhbGlkIGtleScpOwogICAgfQogIH0sCiAgbWV0aG9kczoge30KfTs="},{"version":3,"sources":["api.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-container>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Api',\r\n  data: () => ({\r\n  }),\r\n  mounted(){\r\n    let db = this.$store.state.db;\r\n    let saveWallet = {};\r\n    saveWallet.binid = this.$route.query.binid;\r\n    saveWallet.count = this.$route.query.count;\r\n    if(this.$transactionKey==this.$route.query.key){\r\n      let ref = this;\r\n      if(this.$route.query.count){\r\n        let getUserDocRef = db.collection('users').doc(this.$firebase.auth().currentUser.uid);\r\n        \r\n        db.collection('bin_users').where('binid','==',parseInt(this.$route.query.binid))\r\n        .where('active','==',true)\r\n        .get()\r\n        .then(function(querySnapshot) {\r\n            querySnapshot.forEach(function(doc) {\r\n                saveWallet.uid = doc.data().uid;\r\n                saveWallet.rate = ref.$rate;\r\n                saveWallet.tokens = ref.$rate;\r\n                saveWallet.time = Date. now();\r\n                db.collection(\"transactions\").add(saveWallet)\r\n                .then(\r\n                  (savedTransactionID)=>{\r\n                    console.log('savedTransactionID => '+savedTransactionID.id);\r\n                    return db.runTransaction(function(transaction) {\r\n                      // This code may get re-run multiple times if there are conflicts.\r\n                      //eslint-disable-next-line\r\n                      return transaction.get(getUserDocRef).then(function(getUserDoc) {\r\n                          if (!getUserDoc.exists) {\r\n                              throw \"Document does not exist!\";\r\n                          }\r\n                          var newTokens = getUserDoc.data().tokens + saveWallet.tokens;\r\n                          //var newBonus = getUserDoc.data().bonus + decodedString.bonus;\r\n                          //eslint-disable-next-line\r\n                          transaction.update(getUserDocRef, { tokens: newTokens/*, bonus: newBonus*/});\r\n                          ref.$store.state.user.tokens = newTokens;\r\n                          alert(\"user \"+getUserDoc.id+\" recycled for the amount of \"+newTokens+\" tokens\");\r\n                      });\r\n                    }).then(function() {});\r\n                  }\r\n                );\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n      }\r\n\r\n      if(this.$route.query.active){\r\n        let activeUser = {};\r\n      // activeUser.uid = this.$firebase.auth().currentUser.uid;\r\n        activeUser.binid = this.$route.query.binid;\r\n        activeUser.active = true;\r\n        activeUser.pending = true;\r\n        activeUser.datetime = Date.now();\r\n\r\n        //delete active \r\n        var activekill_query = db.collection('bin_users').where('active','==',true);\r\n        activekill_query.get().then(function(querySnapshot) {\r\n          querySnapshot.forEach(function(doc) {\r\n            doc.ref.delete();\r\n            alert(doc.id);\r\n          });\r\n        }).then(\r\n          ()=>{\r\n            db.collection('bin_users').add(activeUser)\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      console.log('invalid key');\r\n    }\r\n  },\r\n  methods:{\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}