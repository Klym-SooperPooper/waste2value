{"remainingRequest":"C:\\apps\\beeko2\\node_modules\\thread-loader\\dist\\cjs.js!C:\\apps\\beeko2\\node_modules\\babel-loader\\lib\\index.js!C:\\APPS\\beeko2\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\apps\\beeko2\\src\\store.js","dependencies":[{"path":"C:\\apps\\beeko2\\src\\store.js","mtime":1610431934900},{"path":"C:\\apps\\beeko2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\APPS\\beeko2\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5mcm9tLWVudHJpZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQzpcXGFwcHNcXGJlZWtvMlxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKaW1wb3J0IGZpcmViYXNlLCB7IGRiIH0gZnJvbSAiLi9maXJlYmFzZSI7CmltcG9ydCBjcmVhdGVQZXJzaXN0ZWRTdGF0ZSBmcm9tICd2dWV4LXBlcnNpc3RlZHN0YXRlJzsKVnVlLnVzZShWdWV4KTsKdmFyIHVuc3Vic2NyaWJlSGFuZGxlID0gbnVsbDsKdmFyIHN0b3JlID0gbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICBxcjogMSwKICAgIGRiOiBkYiwKICAgIHVzZXI6IG51bGwKICB9LAogIGFjdGlvbnM6IHsKICAgIHByb2Nlc3NGaXJlYmFzZVVzZXI6IGZ1bmN0aW9uIHByb2Nlc3NGaXJlYmFzZVVzZXIoX3JlZiwgZmlyZWJhc2VVc2VyKSB7CiAgICAgIHZhciBjb21taXQsIHVzZXJEb2MsIHVzZXJEYXRhOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIHByb2Nlc3NGaXJlYmFzZVVzZXIkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwoKICAgICAgICAgICAgICBpZiAodW5zdWJzY3JpYmVIYW5kbGUpIHsKICAgICAgICAgICAgICAgIHVuc3Vic2NyaWJlSGFuZGxlKCk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAoIWZpcmViYXNlVXNlcikgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE1OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGRiLmNvbGxlY3Rpb24oJ3VzZXJzJykuZG9jKGZpcmViYXNlVXNlci51aWQpLmdldCgpKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICB1c2VyRG9jID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKHVzZXJEb2MuZXhpc3RzKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZmFsc2UpOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIHVzZXJEYXRhID0gdXNlckRvYy5kYXRhKCk7CiAgICAgICAgICAgICAgaWYgKGlzTmFOKHVzZXJEYXRhLnRva2VucykpIHVzZXJEYXRhLnRva2VucyA9IDA7CiAgICAgICAgICAgICAgaWYgKGlzTmFOKHVzZXJEYXRhLmJvbnVzKSkgdXNlckRhdGEuYm9udXMgPSAwOwogICAgICAgICAgICAgIGNvbW1pdCgndXNlclVwZGF0ZWQnLCBfb2JqZWN0U3ByZWFkKHt9LCB1c2VyRGF0YSwgewogICAgICAgICAgICAgICAgdWlkOiBmaXJlYmFzZVVzZXIudWlkCiAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICAgIHVuc3Vic2NyaWJlSGFuZGxlID0gZGIuY29sbGVjdGlvbigndXNlcnMnKS5kb2MoZmlyZWJhc2VVc2VyLnVpZCkub25TbmFwc2hvdChmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgICAgICAgICB2YXIgdXNlckRhdGEgPSBkb2MuZGF0YSgpOwogICAgICAgICAgICAgICAgY29tbWl0KCd1c2VyVXBkYXRlZCcsIF9vYmplY3RTcHJlYWQoe30sIHVzZXJEYXRhLCB7CiAgICAgICAgICAgICAgICAgIHVpZDogZmlyZWJhc2VVc2VyLnVpZAogICAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNjsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgLy8gU2lnbiBvdXQKICAgICAgICAgICAgICBjb21taXQoJ3VzZXJVcGRhdGVkJywgbnVsbCk7CgogICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgdXNlclVwZGF0ZWQ6IGZ1bmN0aW9uIHVzZXJVcGRhdGVkKHN0YXRlLCB1c2VyKSB7CiAgICAgIHN0YXRlLnVzZXIgPSB1c2VyOwogICAgfQogIH0sCiAgcGx1Z2luczogW2NyZWF0ZVBlcnNpc3RlZFN0YXRlKHsKICAgIHJlZHVjZXI6IGZ1bmN0aW9uIHJlZHVjZXIocGVyc2lzdGVkU3RhdGUpIHsKICAgICAgdmFyIHN0YXRlTWFwID0gbmV3IE1hcChPYmplY3QuZW50cmllcyhwZXJzaXN0ZWRTdGF0ZSkpOwogICAgICB2YXIgYmxhY2tMaXN0ID0gWydkYiddOwogICAgICBibGFja0xpc3QuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgc3RhdGVNYXAuZGVsZXRlKGtleSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKHN0YXRlTWFwKTsKICAgIH0KICB9KV0KfSk7CmZpcmViYXNlLmF1dGgoKS5vbkF1dGhTdGF0ZUNoYW5nZWQoZnVuY3Rpb24gKGZpcmViYXNlVXNlcikgewogIHJldHVybiBzdG9yZS5kaXNwYXRjaCgncHJvY2Vzc0ZpcmViYXNlVXNlcicsIGZpcmViYXNlVXNlcik7Cn0pOwpleHBvcnQgZGVmYXVsdCBzdG9yZTs="},{"version":3,"sources":["C:/apps/beeko2/src/store.js"],"names":["Vue","Vuex","firebase","db","createPersistedState","use","unsubscribeHandle","store","Store","state","qr","user","actions","processFirebaseUser","firebaseUser","commit","collection","doc","uid","get","userDoc","exists","userData","data","isNaN","tokens","bonus","onSnapshot","mutations","userUpdated","plugins","reducer","persistedState","stateMap","Map","Object","entries","blackList","forEach","key","delete","fromEntries","auth","onAuthStateChanged","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,IAAmBC,EAAnB;AAEA,OAAOC,oBAAP,MAAiC,qBAAjC;AAEAJ,GAAG,CAACK,GAAJ,CAAQJ,IAAR;AAEA,IAAIK,iBAAiB,GAAG,IAAxB;AACA,IAAMC,KAAK,GAAG,IAAIN,IAAI,CAACO,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACNC,IAAAA,EAAE,EAAE,CADE;AAENP,IAAAA,EAAE,EAAFA,EAFM;AAGNQ,IAAAA,IAAI,EAAE;AAHA,GADqB;AAM5BC,EAAAA,OAAO,EAAE;AACFC,IAAAA,mBADE,qCAC8BC,YAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACoBC,cAAAA,MADpB,QACoBA,MADpB;;AAEP,kBAAIT,iBAAJ,EAAuB;AACtBA,gBAAAA,iBAAiB;AACjB;;AAJM,mBAKHQ,YALG;AAAA;AAAA;AAAA;;AAAA;AAAA,8CAMgBX,EAAE,CACtBa,UADoB,CACT,OADS,EAEpBC,GAFoB,CAEhBH,YAAY,CAACI,GAFG,EAGpBC,GAHoB,EANhB;;AAAA;AAMAC,cAAAA,OANA;;AAAA,kBAWDA,OAAO,CAACC,MAXP;AAAA;AAAA;AAAA;;AAAA,+CAaE,KAbF;;AAAA;AAgBAC,cAAAA,QAhBA,GAgBWF,OAAO,CAACG,IAAR,EAhBX;AAkBN,kBAAIC,KAAK,CAACF,QAAQ,CAACG,MAAV,CAAT,EAA4BH,QAAQ,CAACG,MAAT,GAAkB,CAAlB;AAC5B,kBAAID,KAAK,CAACF,QAAQ,CAACI,KAAV,CAAT,EAA2BJ,QAAQ,CAACI,KAAT,GAAiB,CAAjB;AAE3BX,cAAAA,MAAM,CAAC,aAAD,oBAAqBO,QAArB;AAA+BJ,gBAAAA,GAAG,EAAEJ,YAAY,CAACI;AAAjD,iBAAN;AACAZ,cAAAA,iBAAiB,GAAGH,EAAE,CACpBa,UADkB,CACP,OADO,EAElBC,GAFkB,CAEdH,YAAY,CAACI,GAFC,EAGlBS,UAHkB,CAGP,UAACV,GAAD,EAAS;AACpB,oBAAMK,QAAQ,GAAGL,GAAG,CAACM,IAAJ,EAAjB;AACAR,gBAAAA,MAAM,CAAC,aAAD,oBAAqBO,QAArB;AAA+BJ,kBAAAA,GAAG,EAAEJ,YAAY,CAACI;AAAjD,mBAAN;AACA,eANkB,CAApB;AAtBM;AAAA;;AAAA;AA8BN;AACAH,cAAAA,MAAM,CAAC,aAAD,EAAgB,IAAhB,CAAN;;AA/BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GANmB;AAyC5Ba,EAAAA,SAAS,EAAE;AACVC,IAAAA,WADU,uBACEpB,KADF,EACSE,IADT,EACe;AACxBF,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACA;AAHS,GAzCiB;AA8C5BmB,EAAAA,OAAO,EAAE,CACR1B,oBAAoB,CAAC;AACpB2B,IAAAA,OAAO,EAAE,iBAACC,cAAD,EAAoB;AAC5B,UAAMC,QAAQ,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeJ,cAAf,CAAR,CAAjB;AACA,UAAMK,SAAS,GAAG,CAAC,IAAD,CAAlB;AAEAA,MAAAA,SAAS,CAACC,OAAV,CAAkB,UAACC,GAAD,EAAS;AAC1BN,QAAAA,QAAQ,CAACO,MAAT,CAAgBD,GAAhB;AACA,OAFD;AAIA,aAAOJ,MAAM,CAACM,WAAP,CAAmBR,QAAnB,CAAP;AACA;AAVmB,GAAD,CADZ;AA9CmB,CAAf,CAAd;AA8DA/B,QAAQ,CAACwC,IAAT,GAAgBC,kBAAhB,CAAmC,UAAA7B,YAAY;AAAA,SAAIP,KAAK,CAACqC,QAAN,CAAe,qBAAf,EAAsC9B,YAAtC,CAAJ;AAAA,CAA/C;AAEA,eAAeP,KAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport firebase, { db } from './firebase';\n\nimport createPersistedState from 'vuex-persistedstate';\n\nVue.use(Vuex);\n\nlet unsubscribeHandle = null;\nconst store = new Vuex.Store({\n\tstate: {\n\t\tqr: 1,\n\t\tdb,\n\t\tuser: null,\n\t},\n\tactions: {\n\t\tasync processFirebaseUser({ commit }, firebaseUser) {\n\t\t\tif (unsubscribeHandle) {\n\t\t\t\tunsubscribeHandle();\n\t\t\t}\n\t\t\tif (firebaseUser) {\n\t\t\t\tconst userDoc = await db\n\t\t\t\t\t.collection('users')\n\t\t\t\t\t.doc(firebaseUser.uid)\n\t\t\t\t\t.get();\n\n\t\t\t\tif (!userDoc.exists) {\n\t\t\t\t\t// Случай когда пользователь не зарегистрировался через систему, нужно либо провести через процесс регистрации либо проигнорировать\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst userData = userDoc.data();\n\n\t\t\t\tif (isNaN(userData.tokens)) userData.tokens = 0;\n\t\t\t\tif (isNaN(userData.bonus)) userData.bonus = 0;\n\n\t\t\t\tcommit('userUpdated', { ...userData, uid: firebaseUser.uid });\n\t\t\t\tunsubscribeHandle = db\n\t\t\t\t\t.collection('users')\n\t\t\t\t\t.doc(firebaseUser.uid)\n\t\t\t\t\t.onSnapshot((doc) => {\n\t\t\t\t\t\tconst userData = doc.data();\n\t\t\t\t\t\tcommit('userUpdated', { ...userData, uid: firebaseUser.uid });\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Sign out\n\t\t\t\tcommit('userUpdated', null);\n\t\t\t}\n\t\t}\n\t},\n\tmutations: {\n\t\tuserUpdated(state, user) {\n\t\t\tstate.user = user;\n\t\t},\n\t},\n\tplugins: [\n\t\tcreatePersistedState({\n\t\t\treducer: (persistedState) => {\n\t\t\t\tconst stateMap = new Map(Object.entries(persistedState));\n\t\t\t\tconst blackList = ['db'];\n\n\t\t\t\tblackList.forEach((key) => {\n\t\t\t\t\tstateMap.delete(key);\n\t\t\t\t});\n\n\t\t\t\treturn Object.fromEntries(stateMap);\n\t\t\t},\n\t\t}),\n\t],\n});\n\nfirebase.auth().onAuthStateChanged(firebaseUser => store.dispatch('processFirebaseUser', firebaseUser));\n\nexport default store;\n"]}]}