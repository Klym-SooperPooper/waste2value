{"remainingRequest":"C:\\APPS\\beeko\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\APPS\\beeko\\src\\components\\api.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\APPS\\beeko\\src\\components\\api.vue","mtime":1589107944000},{"path":"C:\\APPS\\beeko\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\APPS\\beeko\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\APPS\\beeko\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1567240334000},{"path":"C:\\APPS\\beeko\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\APPS\\beeko\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdBcGknLA0KICBkYXRhOiAoKSA9PiAoew0KICB9KSwNCiAgbW91bnRlZCgpew0KICAgIGxldCBkYiA9IHRoaXMuJHN0b3JlLnN0YXRlLmRiOw0KICAgIGxldCBzYXZlV2FsbGV0ID0ge307DQogICAgc2F2ZVdhbGxldC5iaW5pZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmJpbmlkOw0KICAgIHNhdmVXYWxsZXQuY291bnQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5jb3VudDsNCiAgICBpZih0aGlzLiR0cmFuc2FjdGlvbktleT09dGhpcy4kcm91dGUucXVlcnkua2V5KXsNCiAgICAgIGxldCByZWYgPSB0aGlzOw0KICAgICAgaWYodGhpcy4kcm91dGUucXVlcnkuY291bnQpew0KICAgICAgICBsZXQgZ2V0VXNlckRvY1JlZiA9IGRiLmNvbGxlY3Rpb24oJ3VzZXJzJykuZG9jKHRoaXMuJGZpcmViYXNlLmF1dGgoKS5jdXJyZW50VXNlci51aWQpOw0KICAgICAgICANCiAgICAgICAgZGIuY29sbGVjdGlvbignYmluX3VzZXJzJykud2hlcmUoJ2JpbmlkJywnPT0nLHBhcnNlSW50KHRoaXMuJHJvdXRlLnF1ZXJ5LmJpbmlkKSkNCiAgICAgICAgLndoZXJlKCdhY3RpdmUnLCc9PScsdHJ1ZSkNCiAgICAgICAgLmdldCgpDQogICAgICAgIC50aGVuKGZ1bmN0aW9uKHF1ZXJ5U25hcHNob3QpIHsNCiAgICAgICAgICAgIHF1ZXJ5U25hcHNob3QuZm9yRWFjaChmdW5jdGlvbihkb2MpIHsNCiAgICAgICAgICAgICAgICBzYXZlV2FsbGV0LnVpZCA9IGRvYy5kYXRhKCkudWlkOw0KICAgICAgICAgICAgICAgIHNhdmVXYWxsZXQucmF0ZSA9IHJlZi4kcmF0ZTsNCiAgICAgICAgICAgICAgICBzYXZlV2FsbGV0LnRva2VucyA9IHJlZi4kcmF0ZTsNCiAgICAgICAgICAgICAgICBzYXZlV2FsbGV0LnRpbWUgPSBEYXRlLiBub3coKTsNCiAgICAgICAgICAgICAgICBkYi5jb2xsZWN0aW9uKCJ0cmFuc2FjdGlvbnMiKS5hZGQoc2F2ZVdhbGxldCkNCiAgICAgICAgICAgICAgICAudGhlbigNCiAgICAgICAgICAgICAgICAgIChzYXZlZFRyYW5zYWN0aW9uSUQpPT57DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzYXZlZFRyYW5zYWN0aW9uSUQgPT4gJytzYXZlZFRyYW5zYWN0aW9uSUQuaWQpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGIucnVuVHJhbnNhY3Rpb24oZnVuY3Rpb24odHJhbnNhY3Rpb24pIHsNCiAgICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIGNvZGUgbWF5IGdldCByZS1ydW4gbXVsdGlwbGUgdGltZXMgaWYgdGhlcmUgYXJlIGNvbmZsaWN0cy4NCiAgICAgICAgICAgICAgICAgICAgICAvL2VzbGludC1kaXNhYmxlLW5leHQtbGluZQ0KICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2FjdGlvbi5nZXQoZ2V0VXNlckRvY1JlZikudGhlbihmdW5jdGlvbihnZXRVc2VyRG9jKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZ2V0VXNlckRvYy5leGlzdHMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93ICJEb2N1bWVudCBkb2VzIG5vdCBleGlzdCEiOw0KICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdUb2tlbnMgPSBnZXRVc2VyRG9jLmRhdGEoKS50b2tlbnMgKyBzYXZlV2FsbGV0LnRva2VuczsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgLy92YXIgbmV3Qm9udXMgPSBnZXRVc2VyRG9jLmRhdGEoKS5ib251cyArIGRlY29kZWRTdHJpbmcuYm9udXM7DQogICAgICAgICAgICAgICAgICAgICAgICAgIC8vZXNsaW50LWRpc2FibGUtbmV4dC1saW5lDQogICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uLnVwZGF0ZShnZXRVc2VyRG9jUmVmLCB7IHRva2VuczogbmV3VG9rZW5zLyosIGJvbnVzOiBuZXdCb251cyovfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgIHJlZi4kc3RvcmUuc3RhdGUudXNlci50b2tlbnMgPSBuZXdUb2tlbnM7DQogICAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCJ1c2VyICIrZ2V0VXNlckRvYy5pZCsiIHJlY3ljbGVkIGZvciB0aGUgYW1vdW50IG9mICIrbmV3VG9rZW5zKyIgdG9rZW5zIik7DQogICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24oKSB7fSk7DQogICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgKTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJFcnJvciBnZXR0aW5nIGRvY3VtZW50czogIiwgZXJyb3IpOw0KICAgICAgICB9KTsNCiAgICAgIH0NCg0KICAgICAgaWYodGhpcy4kcm91dGUucXVlcnkuYWN0aXZlKXsNCiAgICAgICAgbGV0IGFjdGl2ZVVzZXIgPSB7fTsNCiAgICAgIC8vIGFjdGl2ZVVzZXIudWlkID0gdGhpcy4kZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyLnVpZDsNCiAgICAgICAgYWN0aXZlVXNlci5iaW5pZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmJpbmlkOw0KICAgICAgICBhY3RpdmVVc2VyLmFjdGl2ZSA9IHRydWU7DQogICAgICAgIGFjdGl2ZVVzZXIucGVuZGluZyA9IHRydWU7DQogICAgICAgIGFjdGl2ZVVzZXIuZGF0ZXRpbWUgPSBEYXRlLm5vdygpOw0KDQogICAgICAgIC8vZGVsZXRlIGFjdGl2ZSANCiAgICAgICAgdmFyIGFjdGl2ZWtpbGxfcXVlcnkgPSBkYi5jb2xsZWN0aW9uKCdiaW5fdXNlcnMnKS53aGVyZSgnYWN0aXZlJywnPT0nLHRydWUpOw0KICAgICAgICBhY3RpdmVraWxsX3F1ZXJ5LmdldCgpLnRoZW4oZnVuY3Rpb24ocXVlcnlTbmFwc2hvdCkgew0KICAgICAgICAgIHF1ZXJ5U25hcHNob3QuZm9yRWFjaChmdW5jdGlvbihkb2MpIHsNCiAgICAgICAgICAgIGRvYy5yZWYuZGVsZXRlKCk7DQogICAgICAgICAgICBhbGVydChkb2MuaWQpOw0KICAgICAgICAgIH0pOw0KICAgICAgICB9KS50aGVuKA0KICAgICAgICAgICgpPT57DQogICAgICAgICAgICBkYi5jb2xsZWN0aW9uKCdiaW5fdXNlcnMnKS5hZGQoYWN0aXZlVXNlcikNCiAgICAgICAgICB9DQogICAgICAgICk7DQogICAgICB9DQogICAgfSBlbHNlIHsNCiAgICAgIGNvbnNvbGUubG9nKCdpbnZhbGlkIGtleScpOw0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczp7DQogIH0NCn07DQo="},{"version":3,"sources":["api.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"api.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-container>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Api',\r\n  data: () => ({\r\n  }),\r\n  mounted(){\r\n    let db = this.$store.state.db;\r\n    let saveWallet = {};\r\n    saveWallet.binid = this.$route.query.binid;\r\n    saveWallet.count = this.$route.query.count;\r\n    if(this.$transactionKey==this.$route.query.key){\r\n      let ref = this;\r\n      if(this.$route.query.count){\r\n        let getUserDocRef = db.collection('users').doc(this.$firebase.auth().currentUser.uid);\r\n        \r\n        db.collection('bin_users').where('binid','==',parseInt(this.$route.query.binid))\r\n        .where('active','==',true)\r\n        .get()\r\n        .then(function(querySnapshot) {\r\n            querySnapshot.forEach(function(doc) {\r\n                saveWallet.uid = doc.data().uid;\r\n                saveWallet.rate = ref.$rate;\r\n                saveWallet.tokens = ref.$rate;\r\n                saveWallet.time = Date. now();\r\n                db.collection(\"transactions\").add(saveWallet)\r\n                .then(\r\n                  (savedTransactionID)=>{\r\n                    console.log('savedTransactionID => '+savedTransactionID.id);\r\n                    return db.runTransaction(function(transaction) {\r\n                      // This code may get re-run multiple times if there are conflicts.\r\n                      //eslint-disable-next-line\r\n                      return transaction.get(getUserDocRef).then(function(getUserDoc) {\r\n                          if (!getUserDoc.exists) {\r\n                              throw \"Document does not exist!\";\r\n                          }\r\n                          var newTokens = getUserDoc.data().tokens + saveWallet.tokens;\r\n                          //var newBonus = getUserDoc.data().bonus + decodedString.bonus;\r\n                          //eslint-disable-next-line\r\n                          transaction.update(getUserDocRef, { tokens: newTokens/*, bonus: newBonus*/});\r\n                          ref.$store.state.user.tokens = newTokens;\r\n                          alert(\"user \"+getUserDoc.id+\" recycled for the amount of \"+newTokens+\" tokens\");\r\n                      });\r\n                    }).then(function() {});\r\n                  }\r\n                );\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n      }\r\n\r\n      if(this.$route.query.active){\r\n        let activeUser = {};\r\n      // activeUser.uid = this.$firebase.auth().currentUser.uid;\r\n        activeUser.binid = this.$route.query.binid;\r\n        activeUser.active = true;\r\n        activeUser.pending = true;\r\n        activeUser.datetime = Date.now();\r\n\r\n        //delete active \r\n        var activekill_query = db.collection('bin_users').where('active','==',true);\r\n        activekill_query.get().then(function(querySnapshot) {\r\n          querySnapshot.forEach(function(doc) {\r\n            doc.ref.delete();\r\n            alert(doc.id);\r\n          });\r\n        }).then(\r\n          ()=>{\r\n            db.collection('bin_users').add(activeUser)\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      console.log('invalid key');\r\n    }\r\n  },\r\n  methods:{\r\n  }\r\n};\r\n</script>\r\n"]}]}