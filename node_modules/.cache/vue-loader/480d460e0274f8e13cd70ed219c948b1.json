{"remainingRequest":"D:\\beeko\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\beeko\\src\\components\\ads.vue?vue&type=template&id=197f99b4&","dependencies":[{"path":"D:\\beeko\\src\\components\\ads.vue","mtime":1584808445595},{"path":"D:\\beeko\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\beeko\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\beeko\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1567240333000},{"path":"D:\\beeko\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\beeko\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}