{"remainingRequest":"C:\\apps\\beeko2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\apps\\beeko2\\src\\components\\qr.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\apps\\beeko2\\src\\components\\qr.vue","mtime":1609845920077},{"path":"C:\\apps\\beeko2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1567240334000},{"path":"C:\\apps\\beeko2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\apps\\beeko2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["qr.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"qr.vue","sourceRoot":"src/components","sourcesContent":["/* eslint-disable */\n<template>\n\t<v-container>\n\t\t<v-layout text-center wrap>\n\t\t\t<v-flex xs12>\n\t\t\t\t<v-img\n\t\t\t\t\t:src=\"require('../assets/logo2.png')\"\n\t\t\t\t\tclass=\"my-3\"\n\t\t\t\t\tcontain\n\t\t\t\t\theight=\"180\"\n\t\t\t\t></v-img>\n\t\t\t</v-flex>\n\n\t\t\t<v-flex mb-4>\n\t\t\t\t<div v-if=\"mountQRReader\">\n\t\t\t\t\t<v-alert\n\t\t\t\t\t\tv-if=\"errorStatus\"\n\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\tcolor=\"red lighten-2\"\n\t\t\t\t\t\ticon=\"mdi-alert\"\n\t\t\t\t\t\t>{{ errorStatus }}</v-alert\n\t\t\t\t\t>\n\t\t\t\t\t<v-alert\n\t\t\t\t\t\tv-else\n\t\t\t\t\t\ttype=\"info\"\n\t\t\t\t\t\tcolor=\"orange lighten-2\"\n\t\t\t\t\t\ticon=\"mdi-qrcode-scan\"\n\t\t\t\t\t>\n\t\t\t\t\t\tНаведіть на екран на контейнері для автоматичного сканування\n\t\t\t\t\t</v-alert>\n\t\t\t\t\t<v-alert\n\t\t\t\t\t\tv-if=\"location\"\n\t\t\t\t\t\ttype=\"info\"\n\t\t\t\t\t\ticon=\"mdi-information-outline\"\n\t\t\t\t\t\t>Lat: {{ location.latitude }}, long: {{ location.longitude }}</v-alert\n\t\t\t\t\t>\n\n\t\t\t\t\t<qrcode-stream\n\t\t\t\t\t\t@decode=\"onDecode\"\n\t\t\t\t\t\t@init=\"onInit\"\n\t\t\t\t\t\theight=\"100\"\n\t\t\t\t\t></qrcode-stream>\n\t\t\t\t</div>\n\t\t\t\t<v-btn\n\t\t\t\t\tv-if=\"!mountQRReader\"\n\t\t\t\t\t@click=\"startReading\"\n\t\t\t\t\tx-large\n\t\t\t\t\tcolor=\"success\"\n\t\t\t\t\tdark\n\t\t\t\t\t>Сканувати QR-код</v-btn\n\t\t\t\t>\n\t\t\t</v-flex>\n\t\t</v-layout>\n\t</v-container>\n</template>\n\n<script>\nimport { getPermission, Permissions } from '@/util/permissions'\n\nexport default {\n\tdata: () => ({\n\t\terrorStatus: \"\", // Error\\loading message\n\t\tmountQRReader: false,\n\t\tlocation: null,\n\t}),\n\tmounted() {\n\t\tdocument.addEventListener(\"backbutton\", this.backButton, false);\n\t\t/*var qr = this.$qrcode(0, 'H');\n    var transaction = {binid:1, count:1,  time:Date. now()};\n    //var transfer = {fromid:1, tokens:1,  time:Date. now()};\n    transaction = JSON.stringify(transaction);\n    //eslint-disable-next-line no-console\n    console.log(transaction);\n    qr.addData(this.$encryptor.encrypt(JSON.stringify(transaction)));\n    qr.make();\n    document.getElementById('placeHolder').innerHTML = qr.createImgTag();*/\n\n\t\t// mounted addEventListener могут вызвать утечку, так как надо отвязывать каждый вручную в destroyed\n\t\t// возможно повесить его в main.js/App.vue и через Vuex/Vue.prototype показывать\n\t\t// document.addEventListener(\"deviceready\", () => {\n\t\t// \tthis.deviceReady = true;\n\t\t// \tconsole.log(\"Cordova : device is ready !\");\n\t\t// });\n\t},\n\tmethods: {\n\t\tbackButton(){\n\t\t\talert(1);\n\t\t\tthis.$router.go(-1);\n\t\t},\n\t\tasync startReading() {\n\t\t\tconsole.log(Permissions)\n\t\t\tconst cameraPerm = await getPermission(Permissions.camera)\n\t\t\t// const locationPerm = await getPermission(Permissions.location)\n\n\t\t\tif (cameraPerm) {\n\t\t\t\tthis.mountQRReader = !this.mountQRReader\n\t\t\t} else {\n\t\t\t\t// Show user that they can't scan QR code without camera or provide alternate way (load file, etc)\n\t\t\t\tthis.errorStatus = `We couldn't aquire permission to use camera`;\n\t\t\t}\n\n\t\t\t// if (locationPerm) {\n\t\t\t\tconst loc = await new Promise((resolve, reject) => {\n\t\t\t\t\tnavigator.geolocation.getCurrentPosition(resolve, reject)\n\t\t\t\t})\n\t\t\t\tconst { latitude, longitude } = loc.coords;\n\t\t\t\tthis.location = { latitude, longitude }\n\t\t\t// }\n\t\t},\n\t\t//camera QR init\n\t\tasync onInit(promise) {\n\t\t\t// show loading indicator\n\n\t\t\ttry {\n\t\t\t\tconst { capabilities } = await promise;\n\t\t\t\tconsole.log(capabilities);\n\t\t\t\t// successfully initialized\n\t\t\t} catch (error) {\n\t\t\t\t// alert(error.name);\n\t\t\t\tif (error.name !== 'TypeError') {\n\t\t\t\t\tthis.errorStatus = `We couldn't aquire permission to use camera`;\n\t\t\t\t}\n\t\t\t\tif (error.name === \"NotAllowedError\") {\n\t\t\t\t\t// user denied camera access permisson\n\t\t\t\t} else if (error.name === \"NotFoundError\") {\n\t\t\t\t\t// no suitable camera device installed\n\t\t\t\t} else if (error.name === \"NotSupportedError\") {\n\t\t\t\t\t// page is not served over HTTPS (or localhost)\n\t\t\t\t} else if (error.name === \"NotReadableError\") {\n\t\t\t\t\t// maybe camera is already in use\n\t\t\t\t} else if (error.name === \"OverconstrainedError\") {\n\t\t\t\t\t// did you requested the front camera although there is none?\n\t\t\t\t} else if (error.name === \"StreamApiNotSupportedError\") {\n\t\t\t\t\t// browser seems to be lacking features\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\t// hide loading indicator\n\t\t\t}\n\t\t},\n\t\tIsJsonString(str) {\n\t\t\ttry {\n\t\t\t\t//eslint-disable-next-line\n\t\t\t\tconsole.log(\"try str => \" + str);\n\t\t\t\treturn JSON.parse(str);\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tonDecode(decodedString) {\n\t\t\tconsole.log(decodedString);\n\t\t\tif (decodedString) {\n\t\t\t\t//this.$router.push('Wallet')\n\t\t\t\t//var decrypted = this.$encryptor.decrypt(decodedString);\n\t\t\t\t//eslint-disable-next-line\n\t\t\t\tdecodedString = this.IsJsonString(decodedString);\n\t\t\t\tlet router = this.$router;\n\t\t\t\tlet db = this.$store.state.db;\n\t\t\t\tlet ref = this;\n\t\t\t\t//eslint-disable-next-line\n\t\t\t\tlet getUserDocRef = db\n\t\t\t\t\t.collection(\"users\")\n\t\t\t\t\t.doc(this.$firebase.auth().currentUser.uid);\n\n\t\t\t\tif (typeof decodedString === \"object\") {\n\t\t\t\t\t//lottery\n\t\t\t\t\tif (typeof decodedString.t !== \"undefined\") {\n\t\t\t\t\t\tdb.collection(\"qr\")\n\t\t\t\t\t\t\t.where(\"t\", \"==\", decodedString.t)\n\t\t\t\t\t\t\t.where(\"activated\", \"==\", false)\n\t\t\t\t\t\t\t.get()\n\t\t\t\t\t\t\t.then(function (querySnapshot) {\n\t\t\t\t\t\t\t\tquerySnapshot.forEach(function (doc) {\n\t\t\t\t\t\t\t\t\tdb.collection(\"qr\")\n\t\t\t\t\t\t\t\t\t\t.doc(doc.id)\n\t\t\t\t\t\t\t\t\t\t.update({\n\t\t\t\t\t\t\t\t\t\t\tuid: ref.$firebase.auth().currentUser.uid,\n\t\t\t\t\t\t\t\t\t\t\tactivated: true,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\t\talert(\"QR active user is updated!\");\n\t\t\t\t\t\t\t\t\t\t\tdecodedString = {\n\t\t\t\t\t\t\t\t\t\t\t\tbinid: 1,\n\t\t\t\t\t\t\t\t\t\t\t\tbonus: ref.$bonusRate,\n\t\t\t\t\t\t\t\t\t\t\t\tbonusRate: ref.$bonusRate,\n\t\t\t\t\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t\t\t\t\t\trate: ref.$rate,\n\t\t\t\t\t\t\t\t\t\t\t\ttokens: ref.$rate,\n\t\t\t\t\t\t\t\t\t\t\t\tuid: ref.$firebase.auth().currentUser.uid,\n\t\t\t\t\t\t\t\t\t\t\t\ttime: Date.now().toString(),\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\tdb.collection(\"transactions\")\n\t\t\t\t\t\t\t\t\t\t\t\t.add(decodedString)\n\t\t\t\t\t\t\t\t\t\t\t\t.then(function (docRef) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Transaction written with ID: \",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdocRef.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t//run TRANSFER USER transaction\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn db\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.runTransaction(function (transaction) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// This code may get re-run multiple times if there are conflicts.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn transaction\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.get(getUserDocRef)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.then(function (getUserDoc) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!getUserDoc.exists) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow \"Document does not exist!\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar newTokens =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.data().tokens +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecodedString.tokens;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar newBonus =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.data().bonus +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecodedString.bonus;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransaction.update(getUserDocRef, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttokens: newTokens,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbonus: newBonus,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"user \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.id +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" played lottery for the amount of \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTokens +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" tokens\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.then(function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Lottery user transaction successfully committed!\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//run transaction for transfer user\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trouter.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath: \"wallet\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Wallet\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparams: { transferred: decodedString.tokens },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Transaction failed: \", error);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.error(\"Error adding document: \", error);\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t//transfer or vending machine generation\n\t\t\t\t\t//TRANSFER\n\t\t\t\t\telse if (typeof decodedString.tokens !== \"undefined\") {\n\t\t\t\t\t\t//alert('Get your '+decodedString.tokens+' tokens from '+decodedString.fromid+' !');\n\t\t\t\t\t\t//add owner of transaction\n\t\t\t\t\t\tdecodedString.uid = this.$firebase.auth().currentUser.uid;\n\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\tlet getTransferUserDocRef = db\n\t\t\t\t\t\t\t.collection(\"users\")\n\t\t\t\t\t\t\t.doc(decodedString.fromid.toString());\n\t\t\t\t\t\t//make sure we get a number of tokens\n\t\t\t\t\t\tdecodedString.tokens = parseInt(decodedString.tokens);\n\t\t\t\t\t\tdb.collection(\"transactions\")\n\t\t\t\t\t\t\t.add(decodedString)\n\t\t\t\t\t\t\t.then(function (docRef) {\n\t\t\t\t\t\t\t\t//eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\tconsole.log(\"Transaction written with ID: \", docRef.id);\n\n\t\t\t\t\t\t\t\t//run OWNER USER transaction\n\t\t\t\t\t\t\t\treturn db\n\t\t\t\t\t\t\t\t\t.runTransaction(function (transaction) {\n\t\t\t\t\t\t\t\t\t\t// This code may get re-run multiple times if there are conflicts.\n\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\treturn transaction\n\t\t\t\t\t\t\t\t\t\t\t.get(getUserDocRef)\n\t\t\t\t\t\t\t\t\t\t\t.then(function (getUserDoc) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!getUserDoc.exists) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthrow \"Document does not exist!\";\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tvar newTokens =\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.data().tokens + decodedString.tokens;\n\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\ttransaction.update(getUserDocRef, {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttokens: newTokens,\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"user \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.id +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" got \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTokens +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" tokens\"\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.then(function () {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Get user transaction successfully committed!\");\n\t\t\t\t\t\t\t\t\t\t//run TRANSFER USER transaction\n\t\t\t\t\t\t\t\t\t\treturn db\n\t\t\t\t\t\t\t\t\t\t\t.runTransaction(function (transaction) {\n\t\t\t\t\t\t\t\t\t\t\t\t// This code may get re-run multiple times if there are conflicts.\n\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\treturn transaction\n\t\t\t\t\t\t\t\t\t\t\t\t\t.get(getTransferUserDocRef)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.then(function (getTransferUserDoc) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!getTransferUserDoc.exists) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow \"Document does not exist!\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar newTokens =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetTransferUserDoc.data().tokens -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdecodedString.tokens;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransaction.update(getTransferUserDocRef, {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttokens: newTokens,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"user \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetTransferUserDoc.id +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" transferred \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTokens +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" tokens\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t.then(function () {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Transfer user transaction successfully committed!\"\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t//run transaction for transfer user\n\t\t\t\t\t\t\t\t\t\t\t\trouter.push({\n\t\t\t\t\t\t\t\t\t\t\t\t\tpath: \"wallet\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"Wallet\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tparams: { transferred: decodedString.tokens },\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Transaction failed: \", error);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Transaction failed: \", error);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t//eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\tconsole.error(\"Error adding document: \", error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t//RECYCLE transaction\n\t\t\t\t\t} else if (typeof decodedString.count !== \"undefined\") {\n\t\t\t\t\t\t//let recycleTime = new Date(decodedString.time);\n\t\t\t\t\t\t// alert('Thanks for '+decodedString.count+' '+recycleTime.getDate()+' '+(recycleTime.getMonth()+1)+' '+recycleTime.getFullYear());\n\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\tlet getUserDocRef = db\n\t\t\t\t\t\t\t.collection(\"users\")\n\t\t\t\t\t\t\t.doc(this.$firebase.auth().currentUser.uid);\n\t\t\t\t\t\t//add owner of transaction\n\t\t\t\t\t\tdecodedString.uid = this.$firebase.auth().currentUser.uid;\n\t\t\t\t\t\t//calc rates\n\t\t\t\t\t\tdecodedString.tokens = this.$rate * decodedString.count;\n\t\t\t\t\t\tdecodedString.rate = this.$rate;\n\t\t\t\t\t\t//calc bonuses\n\t\t\t\t\t\tdecodedString.bonus = this.$bonusRate * decodedString.count;\n\t\t\t\t\t\tdecodedString.bonusRate = this.$bonusRate;\n\t\t\t\t\t\tdb.collection(\"transactions\")\n\t\t\t\t\t\t\t.add(decodedString)\n\t\t\t\t\t\t\t.then(function (docRef) {\n\t\t\t\t\t\t\t\t//eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\tconsole.log(\"Transaction written with ID: \", docRef.id);\n\t\t\t\t\t\t\t\t//run TRANSFER USER transaction\n\t\t\t\t\t\t\t\treturn db\n\t\t\t\t\t\t\t\t\t.runTransaction(function (transaction) {\n\t\t\t\t\t\t\t\t\t\t// This code may get re-run multiple times if there are conflicts.\n\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\treturn transaction\n\t\t\t\t\t\t\t\t\t\t\t.get(getUserDocRef)\n\t\t\t\t\t\t\t\t\t\t\t.then(function (getUserDoc) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!getUserDoc.exists) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthrow \"Document does not exist!\";\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tvar newTokens =\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.data().tokens + decodedString.tokens;\n\t\t\t\t\t\t\t\t\t\t\t\tvar newBonus =\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.data().bonus + decodedString.bonus;\n\t\t\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\ttransaction.update(getUserDocRef, {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttokens: newTokens,\n\t\t\t\t\t\t\t\t\t\t\t\t\tbonus: newBonus,\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"user \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetUserDoc.id +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" recycled for the amount of \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTokens +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" tokens\"\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.then(function () {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\"Recycling user transaction successfully committed!\"\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t//run transaction for transfer user\n\t\t\t\t\t\t\t\t\t\t//eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\trouter.push({\n\t\t\t\t\t\t\t\t\t\t\tpath: \"wallet\",\n\t\t\t\t\t\t\t\t\t\t\tname: \"Wallet\",\n\t\t\t\t\t\t\t\t\t\t\tparams: { transferred: decodedString.tokens },\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Transaction failed: \", error);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\t//eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\tconsole.error(\"Error adding document: \", error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else if (typeof decodedString.active !== \"undefined\") {\n\t\t\t\t\t\talert(decodedString);\n\t\t\t\t\t\tdb.collection(\"bin_users\")\n\t\t\t\t\t\t\t.where(\"datetime\", \"==\", decodedString.datetime)\n\t\t\t\t\t\t\t.where(\"pending\", \"==\", true)\n\t\t\t\t\t\t\t.where(\"binid\", \"==\", decodedString.binid)\n\t\t\t\t\t\t\t.get()\n\t\t\t\t\t\t\t.then(function (querySnapshot) {\n\t\t\t\t\t\t\t\tif (querySnapshot.exists) {\n\t\t\t\t\t\t\t\t\tquerySnapshot.forEach(function (doc) {\n\t\t\t\t\t\t\t\t\t\tdb.collection(\"bin_users\").doc(doc.id).update({\n\t\t\t\t\t\t\t\t\t\t\tpending: false,\n\t\t\t\t\t\t\t\t\t\t\tactive: true,\n\t\t\t\t\t\t\t\t\t\t\tuid: ref.$firebase.auth().currentUser.uid,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\talert(\"active user is updated!\");\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\talert(\"Error getting active doc\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\t\t\talert(error);\n\t\t\t\t\t\t\t\tconsole.log(\"Error getting active => \", error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"QR error\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\talert(\"QR error\");\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n};\n</script>\n"]}]}